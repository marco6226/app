{"version":3,"sources":["webpack:///./src/app/modulos/inp/components/inspeccion-form/inspeccion-form.component.html","webpack:///./src/app/modulos/inp/components/inspeccion-form/inspeccion-form.component.scss","webpack:///./src/app/modulos/inp/components/inspeccion-form/inspeccion-form.component.ts","webpack:///./src/app/modulos/inp/components/inspeccion-no-programada/inspeccion-no-programada.component.html","webpack:///./src/app/modulos/inp/components/inspeccion-no-programada/inspeccion-no-programada.component.scss","webpack:///./src/app/modulos/inp/components/inspeccion-no-programada/inspeccion-no-programada.component.ts","webpack:///./src/app/modulos/inp/components/inspecciones-sync/inspecciones-sync.component.html","webpack:///./src/app/modulos/inp/components/inspecciones-sync/inspecciones-sync.component.scss","webpack:///./src/app/modulos/inp/components/inspecciones-sync/inspecciones-sync.component.ts","webpack:///./src/app/modulos/inp/components/pregunta-inspeccion/pregunta-inspeccion.component.html","webpack:///./src/app/modulos/inp/components/pregunta-inspeccion/pregunta-inspeccion.component.scss","webpack:///./src/app/modulos/inp/components/pregunta-inspeccion/pregunta-inspeccion.component.ts","webpack:///./src/app/modulos/inp/components/programacion-inspecciones/programacion-inspecciones.component.html","webpack:///./src/app/modulos/inp/components/programacion-inspecciones/programacion-inspecciones.component.scss","webpack:///./src/app/modulos/inp/components/programacion-inspecciones/programacion-inspecciones.component.ts","webpack:///./src/app/modulos/inp/entities/calificacion.ts","webpack:///./src/app/modulos/inp/entities/elemento-inspeccion.ts","webpack:///./src/app/modulos/inp/entities/inspeccion.ts","webpack:///./src/app/modulos/inp/entities/lista-inspeccion-pk.ts","webpack:///./src/app/modulos/inp/entities/lista-inspeccion.ts","webpack:///./src/app/modulos/inp/entities/tipo-hallazgo.ts","webpack:///./src/app/modulos/inp/pages/elaboracion-inspeccion/elaboracion-inspeccion.module.ts","webpack:///./src/app/modulos/inp/pages/elaboracion-inspeccion/elaboracion-inspeccion.page.html","webpack:///./src/app/modulos/inp/pages/elaboracion-inspeccion/elaboracion-inspeccion.page.scss","webpack:///./src/app/modulos/inp/pages/elaboracion-inspeccion/elaboracion-inspeccion.page.ts"],"names":[],"mappings":"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","file":"modulos-inp-pages-elaboracion-inspeccion-elaboracion-inspeccion-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"anterior()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <ion-label *ngIf=\\\"esProgramada\\\">{{area?.nombre}}</ion-label>\\n      <ion-select *ngIf=\\\"!esProgramada\\\" placeholder=\\\"Seleccione área\\\" [(ngModel)]=\\\"area\\\">\\n        <ion-select-option *ngFor=\\\"let area of areasList\\\" [value]=\\\"area\\\">{{area.nombre}}</ion-select-option>\\n      </ion-select>\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"siguiente()\\\" *ngIf=\\\"!visibleGuardar\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-forward\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-label>{{listaInspeccion?.nombre}}</ion-label>\\n  </ion-item>\\n  <ion-item *ngIf=\\\"listaInspeccion?.descripcion\\\">\\n    <ion-note style=\\\"padding:10px;\\\">{{listaInspeccion?.descripcion}}</ion-note>\\n  </ion-item>\\n  <ion-card [ngClass]=\\\" (numeroPreguntaActual == -1) ? 'mostrar':'ocultar'\\\">\\n    <ion-item>\\n      <sm-formulario *ngIf=\\\"listaInspeccion?.formulario\\\" [ngClass]=\\\" (numeroPreguntaActual == -1) ? 'mostrar':'ocultar'\\\" #formulario\\n        [formularioModel]=\\\"listaInspeccion?.formulario\\\"></sm-formulario>\\n    </ion-item>\\n  </ion-card>\\n\\n  <sm-preguntaInspeccion *ngIf=\\\"elementoSelect\\\" [ngClass]=\\\"(numeroPreguntaActual >= 0) ? 'mostrar':'ocultar'\\\" [elementoInspeccion]=\\\"elementoSelect\\\"\\n    [opcionCalificacionList]=\\\"listaInspeccion.opcionCalificacionList\\\" [usarNivelRiesgo]=\\\"listaInspeccion.usarNivelRiesgo\\\" [usarTipoHallazgo]=\\\"listaInspeccion.usarTipoHallazgo\\\">\\n  </sm-preguntaInspeccion>\\n\\n  <div style=\\\"height: 150px;\\\"></div>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"guardarInspeccion()\\\">\\n      <ion-icon name=\\\"save\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\"","module.exports = \".mostrar {\\n  display: block; }\\n\\n.ocultar {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tZWRpYS9EQVRBL2Rldi9zaWdlc3MvZnJvbnRlbmQvc2lnZXNzX2FwcC9zcmMvYXBwL21vZHVsb3MvaW5wL2NvbXBvbmVudHMvaW5zcGVjY2lvbi1mb3JtL2luc3BlY2Npb24tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWMsRUFBQTs7QUFFbEI7RUFDSSxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bG9zL2lucC9jb21wb25lbnRzL2luc3BlY2Npb24tZm9ybS9pbnNwZWNjaW9uLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9zdHJhcntcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cbi5vY3VsdGFye1xuICAgIGRpc3BsYXk6IG5vbmU7XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalController, AlertController, ToastController } from '@ionic/angular';\nimport { Programacion } from '../../entities/programacion';\nimport { FilterQuery } from '../../../com/entities/filter-query'\nimport { Filter, Criteria } from '../../../com/entities/filter'\n\nimport { ListaInspeccionService } from '../../services/lista-inspeccion.service';\nimport { InspeccionService } from '../../services/inspeccion.service';\nimport { ListaInspeccion } from '../../entities/lista-inspeccion';\nimport { ElementoInspeccion } from '../../entities/elemento-inspeccion';\nimport { Calificacion } from '../../entities/calificacion';\nimport { Inspeccion } from '../../entities/inspeccion';\nimport { FormularioComponent } from '../../../com/components/formulario/formulario.component';\nimport { RespuestaCampo } from '../../../com/entities/respuesta-campo';\nimport { Util, asyncLocalStorage } from '../../../com/utils/util'\nimport { TipoHallazgo } from '../../entities/tipo-hallazgo';\nimport { OfflineService } from '../../../com/services/offline.service';\nimport { MensajeUsuarioService } from '../../../com/services/mensaje-usuario.service';\nimport { DirectorioService } from '../../../ado/services/directorio.service';\nimport { Observable } from 'rxjs';\nimport { reject } from 'q';\nimport { Area } from '../../../emp/entities/area';\nimport { StorageService } from '../../../com/services/storage.service';\n\n@Component({\n  selector: 'sm-inspeccionForm',\n  templateUrl: './inspeccion-form.component.html',\n  styleUrls: ['./inspeccion-form.component.scss'],\n  providers: [InspeccionService]\n})\nexport class InspeccionFormComponent implements OnInit {\n\n  @ViewChild('formulario') formulario: FormularioComponent;\n  programacion: Programacion;\n  listaInspeccion: ListaInspeccion;\n  elementoSelect: ElementoInspeccion;\n  numeroPreguntaActual: number = -1;\n  indicePreguntas: any = [];\n  visibleGuardar: boolean;\n  area: Area;\n  esProgramada: boolean;\n  areasList: Area[];\n\n  constructor(\n    public toastController: ToastController,\n    public storageService: StorageService,\n    public alertController: AlertController,\n    public modalController: ModalController,\n    public listaInspeccionService: ListaInspeccionService,\n    public inspeccionService: InspeccionService,\n    public offlineService: OfflineService,\n    public msgService: MensajeUsuarioService,\n    public dirService: DirectorioService\n  ) { }\n\n  ngOnInit() {\n    let obj = this.modalController.getTop().then(\n      data => {\n        let entidad = (<any>data).componentProps.value;\n        let listaPk = null;\n        // Si la entidad recibida como parametro posee el campo area, indica que es una programacion, de lo contrario debe ser una lista\n        this.esProgramada = entidad.area != null;\n        if (this.esProgramada) {\n          this.programacion = entidad;\n          listaPk = this.programacion.listaInspeccion.listaInspeccionPK;\n          this.area = this.programacion.area;\n        } else {\n          this.offlineService.queryArea().then(resp => this.areasList = resp['data']);\n          listaPk = (<ListaInspeccion>entidad).listaInspeccionPK;\n        }\n\n        this.offlineService.queryListaInspeccion(listaPk.id, listaPk.version).then(\n          data => {\n            this.listaInspeccion = (<ListaInspeccion[]>data['data'])[0];\n            this.indexarElementos(this.listaInspeccion.elementoInspeccionList, null);\n          }\n        );\n      }\n    );\n\n\n  }\n\n\n  indexarElementos(list: ElementoInspeccion[], padre: ElementoInspeccion) {\n    list.forEach(element => {\n      element.elementoInspeccionPadre = padre;\n      if (element.elementoInspeccionList == null || element.elementoInspeccionList.length <= 0) {\n        this.indicePreguntas.push(element);\n      } else {\n        this.indexarElementos(element.elementoInspeccionList, element);\n      }\n    });\n  }\n\n  anterior() {\n    this.numeroPreguntaActual -= 1;\n    if (this.numeroPreguntaActual < -1) {\n      this.numeroPreguntaActual = -1;\n      this.presentAlertaSalir();\n      return;\n    }\n    if (this.numeroPreguntaActual < this.indicePreguntas.length - 1 && this.numeroPreguntaActual >= 0) {\n      this.visibleGuardar = false;\n      this.asignarElemento();\n    }\n  }\n\n  async presentAlertaSalir() {\n    const alert = await this.alertController.create({\n      header: '¿Desea salir de la inspección?',\n      message: 'La inspección no ha sido guardada, los datos serán descartados. ¿Confirma esta acción?',\n      buttons: [{\n        text: 'Si',\n        handler: () => {\n          for (let i = 0; i < this.indicePreguntas.length; i++) {\n            let imgKey = this.indicePreguntas[i].calificacion == null ? null : this.indicePreguntas[i].calificacion['img_key'];\n            if (imgKey != null)\n              localStorage.removeItem(imgKey);\n\n          }\n          this.modalController.dismiss();\n        }\n      }, {\n        text: 'No',\n        role: 'cancel',\n        cssClass: 'No'\n      }]\n    });\n    await alert.present();\n  }\n\n\n  siguiente() {\n    if (this.numeroPreguntaActual == this.indicePreguntas.length - 1) {\n      this.visibleGuardar = true;\n      return;\n    }\n    this.numeroPreguntaActual += 1;\n    this.asignarElemento();\n  }\n\n  asignarElemento() {\n    this.elementoSelect = this.indicePreguntas[this.numeroPreguntaActual];\n    // if (this.elementoSelect.calificacion == null) {\n    //   this.elementoSelect.calificacion = new Calificacion();\n    //   this.elementoSelect.calificacion.elementoInspeccion = new ElementoInspeccion();\n    //   this.elementoSelect.calificacion.elementoInspeccion.id = this.elementoSelect.id;\n    //   this.elementoSelect.calificacion.tipoHallazgo = new TipoHallazgo();\n    // }\n  }\n\n  async presentToast(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      position: 'middle',\n      duration: 3000\n    });\n    toast.present();\n  }\n\n  guardarInspeccion() {\n    if (this.formulario.form.status == 'INVALID') {\n      this.numeroPreguntaActual = -1;\n      this.visibleGuardar = false;\n\n      this.presentToast('Por favor diligencie los datos generales faltantes de la inspección');\n      return;\n    }\n    if (!this.esProgramada && this.area == null) {\n      this.presentToast('Por favor especifique el área de la inspección (campo ubicado en la parte superior azul)');\n      return;\n    }\n\n    let calificacionList = [];\n    for (let i = 0; i < this.indicePreguntas.length; i++) {\n      let calf = <Calificacion>this.indicePreguntas[i].calificacion;\n      if (calf == null || calf.opcionCalificacion == null) {\n        this.numeroPreguntaActual = i;\n        this.elementoSelect = this.indicePreguntas[this.numeroPreguntaActual];\n        this.visibleGuardar = this.numeroPreguntaActual == this.indicePreguntas.length - 1;\n        this.presentToast('Por favor especifique la calificación de la pregunta \\\"' + this.elementoSelect.codigo + ' ' + this.elementoSelect.nombre + '\\\"');\n        return;\n      }\n      if (calf.nivelRiesgo != null && (calf.recomendacion == null || calf.recomendacion.length <= 0)) {\n        this.numeroPreguntaActual = i;\n        this.elementoSelect = this.indicePreguntas[this.numeroPreguntaActual];\n        this.visibleGuardar = this.numeroPreguntaActual == this.indicePreguntas.length - 1;\n        this.presentToast('Por favor especifique la descripción del hallazgo según el nivel de riesgo establecido');\n        return;\n      }\n      calificacionList.push(calf);\n    }\n\n    let inspeccion = new Inspeccion();\n    inspeccion.calificacionList = calificacionList;\n    inspeccion.respuestasCampoList = [];\n    if (this.esProgramada) {\n      inspeccion.programacion = this.programacion;\n    } else {\n      inspeccion.area = this.area;\n      inspeccion.listaInspeccion = new ListaInspeccion();\n      inspeccion.listaInspeccion.listaInspeccionPK = this.listaInspeccion.listaInspeccionPK;\n      inspeccion.listaInspeccion.nombre = this.listaInspeccion.nombre;\n      inspeccion.listaInspeccion.codigo = this.listaInspeccion.codigo;\n    }\n\n    this.listaInspeccion.formulario.campoList.forEach(campo => {\n      let respCampo = new RespuestaCampo();\n      respCampo.campoId = campo.id;\n      if (campo.tipo == 'timestamp' || campo.tipo == 'date') {\n        respCampo.valor = new Date(this.formulario.form.value[campo.nombre]);\n      } else if (campo.tipo == 'multiple_select' && campo.respuestaCampo.valor != null) {\n        respCampo.valor = Util.arrayAString(';', <string[]>campo.respuestaCampo.valor);\n      } else {\n        respCampo.valor = this.formulario.form.value[campo.nombre];\n      }\n      inspeccion.respuestasCampoList.push(respCampo);\n    });\n\n    this.persistirInspeccion(inspeccion).then(\n      data => this.manageResponse(data)\n    );\n  }\n\n  persistirInspeccion(inspeccion: Inspeccion): Promise<any> {\n    if (this.offlineService.getOfflineMode()) {\n      return new Promise((resolve, reject) => {\n        inspeccion.fechaRealizada = new Date();\n        inspeccion['hash'] = inspeccion.fechaRealizada.toISOString();\n        this.storageService.guardarInspeccion(inspeccion)\n          .then(() => resolve(inspeccion))\n          .catch(err => reject(err));\n      });\n    } else {\n      return this.inspeccionService.create(inspeccion).then(resp => {\n        let inp = <Inspeccion>resp;\n        for (let i = 0; i < inp.calificacionList.length; i++) {\n          let calf = inp.calificacionList[i];\n          let imgKey = inspeccion.calificacionList[i]['img_key'];\n          let url = localStorage.getItem(imgKey);\n          if (url != null) {\n            Util.dataURLtoFile(url, 'img_' + i + '_inp_calf_' + calf.id + '.jpeg').then(\n              file => this.dirService.upload(file, null, 'INP', calf.id).then(imgResp => localStorage.removeItem(imgKey))\n            );\n          }\n        }\n      });\n    }\n  }\n\n  manageResponse(inspeccion: Inspeccion) {\n    this.modalController.dismiss(inspeccion).then(\n      resp => this.msgService.showMessage({\n        tipoMensaje: 'success',\n        mensaje: 'INSPECCIÓN REALIZADA',\n        detalle: 'Se ha registrado correctamente la inspección'\n      })\n    );\n  }\n\n}\n","module.exports = \"<ion-spinner class=\\\"main-spinner\\\" name=\\\"dots\\\" *ngIf=\\\"loading == true\\\" color=\\\"primary\\\"></ion-spinner>\\n\\n<ion-card *ngFor=\\\"let lista of listasInspeccion; let i = index\\\">\\n    <ion-card-header>\\n        <ion-item>\\n            <h6>{{lista.nombre}}</h6>\\n            <ion-button fill=\\\"outline\\\" slot=\\\"end\\\" *sTienePermiso=\\\"['SEC_GET_SISTNR', 'INP_GET_LISTINP']\\\" (click)=\\\"seleccionarLista(lista)\\\">\\n                Realizar\\n            </ion-button>\\n        </ion-item>\\n        <ion-card-content>\\n            <p>{{lista.codigo}}</p>\\n            <p>{{lista.descripcion}}</p>\\n        </ion-card-content>\\n    </ion-card-header>\\n</ion-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsb3MvaW5wL2NvbXBvbmVudHMvaW5zcGVjY2lvbi1uby1wcm9ncmFtYWRhL2luc3BlY2Npb24tbm8tcHJvZ3JhbWFkYS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { OfflineService } from '../../../com/services/offline.service';\nimport { ListaInspeccion } from '../../entities/lista-inspeccion';\n\n@Component({\n  selector: 'sm-inspeccionNoProgramada',\n  templateUrl: './inspeccion-no-programada.component.html',\n  styleUrls: ['./inspeccion-no-programada.component.scss']\n})\nexport class InspeccionNoProgramadaComponent implements OnInit {\n\n  @Output(\"onListaSelect\") onListaSelect = new EventEmitter<ListaInspeccion>();\n  listasInspeccion: ListaInspeccion[];\n\n  loading: boolean = true;\n\n  constructor(\n    private offlineService: OfflineService,\n  ) { }\n\n  ngOnInit() {\n    this.offlineService.queryListasInspeccion()\n      .then(resp => {\n        this.listasInspeccion = resp['data'];\n        this.loading = false;\n      })\n      .catch(err => this.loading = null);\n  }\n\n  seleccionarLista(lista) {\n    this.onListaSelect.emit(lista);\n  }\n\n}\n","module.exports = \"<ion-card *ngFor=\\\"let inp of inspList; let i = index\\\">\\n  <ion-item>\\n    <ion-button fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"presentAlertConfirm(inp, i)\\\" color=\\\"medium\\\">\\n      <ion-icon name=\\\"close\\\"></ion-icon>\\n    </ion-button>\\n    <ion-button fill=\\\"outline\\\" (click)=\\\"sincronizar(inp, i)\\\">\\n      {{inp.fechaRealizada | date:'dd/MM/yyyy HH:mm'}}\\n    </ion-button>\\n  </ion-item>\\n  <ion-card-header>\\n    <ion-label *ngIf=\\\"inp.programacion\\\">{{inp.programacion.listaInspeccion.nombre}}</ion-label>\\n    <ion-label *ngIf=\\\"inp.listaInspeccion\\\">{{inp.listaInspeccion.nombre}}</ion-label>\\n    <ion-card-subtitle>\\n      <ion-label *ngIf=\\\"inp.programacion\\\">{{inp.programacion.area.nombre}}</ion-label>\\n      <ion-label *ngIf=\\\"inp.area\\\">{{inp.area.nombre}}</ion-label>\\n    </ion-card-subtitle>\\n    <ion-card-subtitle *ngIf=\\\"inp.programacion\\\"> {{inp.programacion.fecha | date:'dd/MM/yyyy'}} </ion-card-subtitle>\\n    <ion-card-subtitle *ngIf=\\\"!inp.programacion\\\"> No programada </ion-card-subtitle>\\n  </ion-card-header>\\n</ion-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsb3MvaW5wL2NvbXBvbmVudHMvaW5zcGVjY2lvbmVzLXN5bmMvaW5zcGVjY2lvbmVzLXN5bmMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\nimport { Inspeccion } from '../../entities/inspeccion';\nimport { Util } from '../../../com/utils/util';\nimport { InspeccionService } from '../../services/inspeccion.service';\nimport { MensajeUsuarioService } from '../../../com/services/mensaje-usuario.service';\nimport { DirectorioService } from '../../../ado/services/directorio.service';\nimport { AlertController } from '@ionic/angular';\nimport { StorageService } from '../../../com/services/storage.service';\n\n@Component({\n  selector: 'sm-inspeccionesSync',\n  templateUrl: './inspecciones-sync.component.html',\n  styleUrls: ['./inspecciones-sync.component.scss']\n})\nexport class InspeccionesSyncComponent implements OnInit {\n\n  @Input('inspecciones') inspList: Inspeccion[];\n  @Output('onEvent') onEvent = new EventEmitter<any>();\n  // @Output('onLoadEvent') onLoadEvent = new EventEmitter<any>();\n\n  constructor(\n    private storageService: StorageService,\n    private inspeccionService: InspeccionService,\n    private msgService: MensajeUsuarioService,\n    private dirService: DirectorioService,\n    public alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n    this.storageService.getInspecciones()\n      .then(resp => {\n        if (resp != null) {\n          this.onEvent.emit({ type: 'onLoad', count: resp.count });\n          this.inspList = resp['data'];\n        } else {\n          this.onEvent.emit({ type: 'onLoad', count: 0 });\n        }\n      });\n  }\n\n  adicionarInspeccion(inspeccion: Inspeccion) {\n    if (this.inspList == null)\n      this.inspList = [];\n    this.inspList.push(inspeccion);\n    this.inspList = this.inspList.slice();\n  }\n\n  borrarInspeccion(insp: Inspeccion, indice: number, emitEvent?: boolean) {\n    return this.storageService.borrarInspeccion(insp)\n      .then(() => {\n        this.inspList.splice(indice, 1);\n        this.inspList = this.inspList.slice();\n        if (emitEvent)\n          this.onEvent.emit({ type: 'onLocalRemove', count: this.inspList.length, inspeccion: insp });\n      })\n  }\n\n  async presentAlertConfirm(inp: Inspeccion, index: number) {\n    const alert = await this.alertController.create({\n      header: '¿Eliminar inspección?',\n      message: 'Esto borrará de su entorno local la inspección y no podrá sincronizarla. ¿Confirma esta acción?',\n      buttons: [{\n        text: 'Si',\n        handler: () => {\n          this.borrarInspeccion(inp, index, true);\n          this.msgService.showMessage({ tipoMensaje: 'info', mensaje: 'Inspección eliminada de entorno local', detalle: '' });\n        }\n      }, {\n        text: 'No',\n        role: 'cancel',\n        cssClass: 'No'\n      }]\n    });\n    await alert.present();\n  }\n\n  sincronizar(insp: Inspeccion, indice: number) {\n    this.inspeccionService.create(insp).then(\n      resp => {\n        for (let i = 0; i < insp.calificacionList.length; i++) {\n          let calf = (<Inspeccion>resp).calificacionList[i];\n          let imgKey = insp.calificacionList[i]['img_key'];\n          let img = localStorage.getItem(imgKey);\n          if (img != null)\n            Util.dataURLtoFile(img, 'img_' + i + '_inp_calf_' + calf.id + '.jpeg').then(file =>\n              this.dirService.upload(file, null, 'INP', calf.id).then(imgResp => {\n                localStorage.removeItem(imgKey)\n              })\n            );\n        }\n\n        console.log(\"Sincronizando insp...\");\n        this.borrarInspeccion(insp, indice)\n          .then(() => {\n            this.msgService.showMessage({\n              tipoMensaje: 'success',\n              mensaje: 'Inspección sincronizada',\n              detalle: 'La inspección ha sido sincronizada correctamente'\n            });\n            this.onEvent.emit({ type: 'onSync', inspeccion: resp, count: this.inspList.length });\n          });\n      }\n    );\n  }\n\n}\n","module.exports = \"<ion-card *ngIf=\\\"elementoActual\\\">\\n  <ion-item *ngFor=\\\"let elem of elementoParents\\\">\\n    <p >{{elem}}</p>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Calificación</ion-label>\\n    <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" [(ngModel)]=\\\"elementoActual.calificacion.opcionCalificacion\\\">\\n      <ion-select-option *ngFor=\\\"let opc of opcionCalificacionList\\\" [value]=\\\"opc\\\">{{opc.nombre}} -\\n        {{opc.descripcion}}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label position=\\\"stacked\\\">Descripción del hallazgo</ion-label>\\n    <ion-textarea [(ngModel)]=\\\"elementoActual.calificacion.recomendacion\\\"  maxlength=\\\"510\\\"></ion-textarea>\\n  </ion-item>\\n  <ion-button color=\\\"primary\\\" fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"getPicture()\\\">\\n    <ion-icon slot=\\\"icon-only\\\" name=\\\"camera\\\"></ion-icon>\\n  </ion-button>\\n  <ion-item>\\n    <img [src]=\\\"image\\\" *ngIf=\\\"image\\\" />\\n  </ion-item>\\n  <ion-item *ngIf=\\\"usarTipoHallazgo\\\">\\n    <ion-label position=\\\"stacked\\\">Tipo hallazgo</ion-label>\\n    <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" [(ngModel)]=\\\"elementoActual.calificacion.tipoHallazgo\\\">\\n      <ion-select-option *ngFor=\\\"let th of elementoActual?.tipoHallazgoList\\\" [value]=\\\"th\\\">{{th.nombre}}\\n      </ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item *ngIf=\\\"usarNivelRiesgo\\\">\\n    <ion-label position=\\\"stacked\\\">Nivel de riesgo</ion-label>\\n    <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" [(ngModel)]=\\\"elementoActual.calificacion.nivelRiesgo\\\">\\n      <ion-select-option *ngFor=\\\"let nr of sistNivelRiesgo?.nivelRiesgoList\\\" [value]=\\\"nr\\\">{{nr.nombre}} -\\n        {{nr.descripcion}}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n</ion-card>\\n\\n\\n<!-- <ion-grid *ngIf=\\\"elementoActual\\\">\\n  <ion-row>\\n    <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"12\\\">\\n      <p *ngFor=\\\"let elem of elementoParents\\\">{{elem}}</p>\\n    </ion-col>\\n    <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"12\\\">\\n      <ion-button color=\\\"primary\\\" fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"getPicture()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"camera\\\"></ion-icon>\\n      </ion-button>\\n      <img [src]=\\\"image\\\" *ngIf=\\\"image\\\" />\\n    </ion-col>\\n    <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"12\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Calificación</ion-label>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" [(ngModel)]=\\\"elementoActual.calificacion.opcionCalificacion\\\">\\n          <ion-select-option *ngFor=\\\"let opc of opcionCalificacionList\\\" [value]=\\\"opc\\\">{{opc.nombre}} -\\n            {{opc.descripcion}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-col>\\n    <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"12\\\" *ngIf=\\\"usarTipoHallazgo\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Tipo hallazgo</ion-label>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" [(ngModel)]=\\\"elementoActual.calificacion.tipoHallazgo\\\">\\n          <ion-select-option *ngFor=\\\"let th of elementoActual?.tipoHallazgoList\\\" [value]=\\\"th\\\">{{th.nombre}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-col>\\n    <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"12\\\" *ngIf=\\\"usarNivelRiesgo\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Nivel de riesgo</ion-label>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" [(ngModel)]=\\\"elementoActual.calificacion.nivelRiesgo\\\">\\n          <ion-select-option *ngFor=\\\"let nr of sistNivelRiesgo?.nivelRiesgoList\\\" [value]=\\\"nr\\\">{{nr.nombre}} -\\n            {{nr.descripcion}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-col>\\n    <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xl=\\\"12\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Recomendación</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"elementoActual.calificacion.recomendacion\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-col>\\n  </ion-row>\\n\\n</ion-grid> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsb3MvaW5wL2NvbXBvbmVudHMvcHJlZ3VudGEtaW5zcGVjY2lvbi9wcmVndW50YS1pbnNwZWNjaW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, SecurityContext } from '@angular/core';\nimport { ElementoInspeccion } from '../../entities/elemento-inspeccion';\nimport { SistemaNivelRiesgo } from '../../../com/entities/sistema-nivel-riesgo';\n\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { OpcionCalificacion } from '../../entities/opcion-calificacion';\nimport { OfflineService } from '../../../com/services/offline.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Calificacion } from '../../entities/calificacion';\nimport { TipoHallazgo } from '../../entities/tipo-hallazgo';\n\n@Component({\n  selector: 'sm-preguntaInspeccion',\n  templateUrl: './pregunta-inspeccion.component.html',\n  styleUrls: ['./pregunta-inspeccion.component.scss'],\n  providers: [Camera]\n})\nexport class PreguntaInspeccionComponent implements OnInit {\n\n  private _elementoActual: ElementoInspeccion;\n  @Input('usarTipoHallazgo') usarTipoHallazgo: boolean;\n  @Input('usarNivelRiesgo') usarNivelRiesgo: boolean;\n  @Input('opcionCalificacionList') opcionCalificacionList: OpcionCalificacion[];\n  sistNivelRiesgo: SistemaNivelRiesgo;\n  image: any;\n  elementoParents: string[];\n\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private offlineService: OfflineService,\n    private camera: Camera,\n  ) { }\n\n  getPicture() {\n    let options: CameraOptions = {\n      quality: 75,\n      destinationType: this.camera.DestinationType.FILE_URI,\n      encodingType: this.camera.EncodingType.JPEG,\n      correctOrientation: true,\n      mediaType: this.camera.MediaType.PICTURE,\n      targetWidth: 960,\n      targetHeight: 960,\n    }\n    this.camera.getPicture(options)\n      .then(imageData => {\n        let imgKey = this.elementoActual.calificacion['img_key'];\n        if (imgKey == null) {\n          imgKey = new Date().toISOString();\n        } else {\n          localStorage.removeItem(imgKey);\n        }\n        this.elementoActual.calificacion['img_key'] = imgKey;\n        let ionImageUrl = (<any>window).Ionic.WebView.convertFileSrc(imageData);\n        this.image = this.domSanitizer.bypassSecurityTrustResourceUrl(ionImageUrl);\n        localStorage.setItem(imgKey, ionImageUrl);\n      })\n      .catch(error => console.error(error));\n  }\n\n  ngOnInit() {\n    // -- Consulta niveles de riesgo\n    this.offlineService.querySistemaNivelRiesgo().then(\n      resp => this.sistNivelRiesgo = resp['data'][0]\n    );\n  }\n\n  @Input('elementoInspeccion') set elementoActual(value: ElementoInspeccion) {\n    this._elementoActual = value;\n    if (value != null && value.calificacion != null) {\n      let ionImageUrl = localStorage.getItem(value.calificacion['img_key']);\n      this.image = ionImageUrl == null ? null : this.domSanitizer.bypassSecurityTrustResourceUrl(ionImageUrl);\n    } else {\n      this._elementoActual.calificacion = new Calificacion();\n      this._elementoActual.calificacion.elementoInspeccion = new ElementoInspeccion();\n      this._elementoActual.calificacion.elementoInspeccion.id = this._elementoActual.id;\n      this._elementoActual.calificacion.tipoHallazgo = new TipoHallazgo();\n      this.image = null;\n    }\n    this.elementoParents = [];\n    this.fillElementosParent(this._elementoActual, this.elementoParents);\n  }\n\n  fillElementosParent(elem: ElementoInspeccion, elementos: string[]) {\n    if (elem.elementoInspeccionPadre != null) {\n      this.fillElementosParent(elem.elementoInspeccionPadre, elementos);\n    }\n    elementos.push((elem.codigo == null ? '' : elem.codigo + ' ') + elem.nombre);\n  }\n\n  get elementoActual() {\n    return this._elementoActual;\n  }\n}\n","module.exports = \"<ion-card *ngFor=\\\"let prog of programacionList\\\">\\n  <ion-item>\\n    <ion-label>{{prog.area.nombre}} </ion-label>\\n    <ion-button [color]=\\\"prog.numeroRealizadas == prog.numeroInspecciones ? 'secondary':'primary'\\\" [disabled]=\\\"prog.numeroRealizadas == prog.numeroInspecciones\\\"\\n      fill=\\\"outline\\\" slot=\\\"end\\\" (click)=\\\"onProgSelect(prog)\\\" *sTienePermiso=\\\"['SEC_GET_SISTNR', 'INP_GET_LISTINP']\\\">\\n      {{prog.numeroRealizadas == prog.numeroInspecciones ? 'Finalizado':'Realizar'}}\\n    </ion-button>\\n  </ion-item>\\n  <ion-card-header>\\n    <ion-card-title>{{prog.numeroRealizadas}}/{{prog.numeroInspecciones}} </ion-card-title>\\n    <ion-card-subtitle>{{prog.listaInspeccion.nombre}} <br/> {{prog.fecha | date:'dd/MM/yyyy'}}\\n    </ion-card-subtitle>\\n  </ion-card-header>\\n  <ion-card-content *ngIf=\\\"prog.offlineDone > 0\\\">\\n    <p>\\n      Pdte sincronizar:\\n      <ion-badge color=\\\"warning\\\">{{prog.offlineDone}}</ion-badge>\\n    </p>\\n  </ion-card-content>\\n</ion-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsb3MvaW5wL2NvbXBvbmVudHMvcHJvZ3JhbWFjaW9uLWluc3BlY2Npb25lcy9wcm9ncmFtYWNpb24taW5zcGVjY2lvbmVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { Programacion } from '../../entities/programacion';\nimport { FilterQuery } from '../../../com/entities/filter-query'\nimport { OfflineService } from '../../../com/services/offline.service'\nimport { StorageService } from '../../../com/services/storage.service';\n\n@Component({\n  selector: 'sm-programacionInspecciones',\n  templateUrl: './programacion-inspecciones.component.html',\n  styleUrls: ['./programacion-inspecciones.component.scss']\n})\nexport class ProgramacionInspeccionesComponent implements OnInit {\n\n  @Output(\"onProgramacionSelect\") onProgramacionSelect = new EventEmitter<Programacion>();\n  programacionList: Programacion[];\n\n  constructor(\n    private storageService: StorageService,\n    private offlineService: OfflineService,\n  ) { }\n\n  ngOnInit() {\n    this.offlineService.queryProgramacionList().then(\n      resp => {\n        this.programacionList = [];\n        (<any[]>resp['data']).forEach(dto => {\n          this.programacionList.push(FilterQuery.dtoToObject(dto));\n        });\n      }\n    );\n  }\n\n  actualizarProgMetadata(id: string, aumentarRealizadas: boolean, aumentarOffline: boolean) {\n    let prog: Programacion;\n    for (let i = 0; i < this.programacionList.length; i++) {\n      if (id == this.programacionList[i].id) {\n        prog = this.programacionList[i];\n        break;\n      }\n    }\n    if (prog['offlineDone'] == null)\n      prog['offlineDone'] = 0;\n    prog.numeroRealizadas += aumentarRealizadas == null ? 0 : (aumentarRealizadas ? 1 : -1);\n    prog['offlineDone'] += aumentarOffline == null ? 0 : (aumentarOffline ? 1 : -1);\n    this.storageService.updateProgramacion(prog);\n  }\n\n  onProgSelect(prog: Programacion) {\n    this.onProgramacionSelect.emit(prog);\n  }\n\n}\n","\n\nimport { ElementoInspeccion } from './elemento-inspeccion'\nimport { OpcionCalificacion } from './opcion-calificacion'\nimport { NivelRiesgo } from '../../com/entities/nivel-riesgo';\nimport { Documento } from '../../ado/entities/documento'\nimport { TipoHallazgo } from './tipo-hallazgo';\n\nexport class Calificacion {\n    id: string;\n    recomendacion: string;\n    elementoInspeccion: ElementoInspeccion;\n    opcionCalificacion: OpcionCalificacion;\n    nivelRiesgo: NivelRiesgo;\n    tipoHallazgo:TipoHallazgo;\n    documentosList: Documento[];\n}","\nimport { Calificacion } from './calificacion'\nimport { TipoHallazgo } from './tipo-hallazgo'\n\nexport class ElementoInspeccion {\n    id: string;\n    codigo: string;\n    nombre: string;\n    descripcion: string;\n    elementoInspeccionPadre: ElementoInspeccion;\n    elementoInspeccionList: ElementoInspeccion[] = [];\n    calificable: boolean;\n    numero: number;\n    calificacion: Calificacion;\n    tipoHallazgoList: TipoHallazgo[];\n}","\nimport { Calificacion } from './calificacion'\nimport { Programacion } from './programacion'\nimport { Usuario } from '../../emp/entities/usuario';\nimport { RespuestaCampo } from '../../com/entities/respuesta-campo';\nimport { Empresa } from '../../emp/entities/empresa';\nimport { ListaInspeccion } from './lista-inspeccion';\nimport { Area } from '../../emp/entities/area';\n\nexport class Inspeccion {\n  id: string;\n  fechaRealizada: Date;\n  fechaModificacion: Date;\n  observacion: string;\n  lugar: string;\n  equipo: string;\n  marca: string;\n  modelo: string;\n  serial: string;\n  descripcion: string;\n  empresa: Empresa;\n  calificacionList: Calificacion[];\n  respuestasCampoList: RespuestaCampo[];\n  programacion: Programacion;\n  usuarioRegistra: Usuario;\n  usuarioModifica: Usuario;\n  listaInspeccion: ListaInspeccion;\n  area: Area;\n}\n","export class ListaInspeccionPK {\n    id: string;\n    version: number;\n}","\nimport { ListaInspeccionPK } from './lista-inspeccion-pk'\nimport { OpcionCalificacion } from './opcion-calificacion'\nimport { ElementoInspeccion } from './elemento-inspeccion'\nimport { Formulario } from '../../com/entities/formulario';\n\n\nexport class ListaInspeccion {\n  listaInspeccionPK: ListaInspeccionPK = new ListaInspeccionPK();\n  nombre: string;\n  codigo: string;\n  numeroPreguntas: number;\n  tipoLista: string;\n  descripcion: string;\n  elementoInspeccionList: ElementoInspeccion[];\n  opcionCalificacionList: OpcionCalificacion[] = [];\n  formulario: Formulario;\n  usarNivelRiesgo:boolean;\n  usarTipoHallazgo:boolean;\n}","\nexport class TipoHallazgo {\n    id: string;\n    nombre: string;\n    descripcion: number;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ComunModule} from '../../../com/comun.module'\nimport { IonicModule } from '@ionic/angular';\nimport { ListaInspeccionService } from '../../services/lista-inspeccion.service';\n\nimport { ElaboracionInspeccionPage } from './elaboracion-inspeccion.page';\nimport { ProgramacionInspeccionesComponent } from '../../components/programacion-inspecciones/programacion-inspecciones.component';\nimport { InspeccionFormComponent } from '../../components/inspeccion-form/inspeccion-form.component'\nimport { PreguntaInspeccionComponent } from '../../components/pregunta-inspeccion/pregunta-inspeccion.component'\nimport { InspeccionesSyncComponent } from '../../components/inspecciones-sync/inspecciones-sync.component'\nimport { InspeccionNoProgramadaComponent } from '../../components/inspeccion-no-programada/inspeccion-no-programada.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ElaboracionInspeccionPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComunModule,\n    RouterModule.forChild(routes)\n  ],\n  exports:[ComunModule],\n  providers: [ListaInspeccionService],\n  entryComponents: [InspeccionFormComponent],\n  declarations: [\n    ElaboracionInspeccionPage, \n    ProgramacionInspeccionesComponent, \n    InspeccionFormComponent,\n    PreguntaInspeccionComponent,\n    InspeccionesSyncComponent,\n    InspeccionNoProgramadaComponent\n  ]\n})\nexport class ElaboracionInspeccionPageModule {\n\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"navegar('/app/home')\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Elaboracion inspeccion</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"listas\\\">\\n    <ion-segment-button value=\\\"listas\\\">\\n      <ion-label>Listas</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"prog\\\">\\n      <ion-label>Programación</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"insp\\\">\\n      <ion-label>\\n        Sincronizar\\n        <ion-badge *ngIf=\\\"inspCount > 0\\\" color=\\\"warning\\\">{{inspCount}}</ion-badge>\\n      </ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <sm-inspeccionNoProgramada [style.display]=\\\"segments['listas'] ? 'block':'none'\\\" (onListaSelect)=\\\"abrirInspeccion($event, false)\\\"></sm-inspeccionNoProgramada>\\n\\n  <sm-programacionInspecciones [style.display]=\\\"segments['prog'] ? 'block':'none'\\\" (onProgramacionSelect)=\\\"abrirInspeccion($event, true)\\\"\\n    #progInspComp></sm-programacionInspecciones>\\n\\n  <sm-inspeccionesSync [style.display]=\\\"segments['insp'] ? 'block':'none'\\\" (onEvent)=\\\"onEvent($event)\\\" #inspSyncComp></sm-inspeccionesSync>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsb3MvaW5wL3BhZ2VzL2VsYWJvcmFjaW9uLWluc3BlY2Npb24vZWxhYm9yYWNpb24taW5zcGVjY2lvbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InspeccionFormComponent } from '../../components/inspeccion-form/inspeccion-form.component'\nimport { ModalController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Programacion } from '../../entities/programacion';\nimport { Inspeccion } from '../../entities/inspeccion';\nimport { asyncLocalStorage } from '../../../com/utils/util';\nimport { InspeccionesSyncComponent } from '../../components/inspecciones-sync/inspecciones-sync.component';\nimport { ProgramacionInspeccionesComponent } from '../../components/programacion-inspecciones/programacion-inspecciones.component';\n\n@Component({\n  selector: 'sm-elaboracionInspeccion',\n  templateUrl: './elaboracion-inspeccion.page.html',\n  styleUrls: ['./elaboracion-inspeccion.page.scss'],\n})\nexport class ElaboracionInspeccionPage implements OnInit {\n\n  @ViewChild('inspSyncComp') inspSyncComp: InspeccionesSyncComponent;\n  @ViewChild('progInspComp') progInspComp: ProgramacionInspeccionesComponent;\n\n  segments = { 'listas': true, 'prog': false, 'insp': false };\n  inspCount = 0;\n\n  constructor(\n    public modalController: ModalController,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n\n  async abrirInspeccion(entidad: any, desdeProg: boolean) {\n    const modal = await this.modalController.create({\n      component: InspeccionFormComponent,\n      componentProps: { value: entidad },\n      cssClass: \"modal-fullscreen\"\n    });\n    modal.onDidDismiss()\n      .then(resp => {\n        this.onModalDismiss(resp['data'], desdeProg ? entidad : null);\n      });\n    return await modal.present();\n  }\n\n  onModalDismiss(inspeccion: Inspeccion, prog: Programacion) {\n    if (inspeccion != null && inspeccion.id == null) {\n      this.inspSyncComp.adicionarInspeccion(inspeccion);\n      this.inspCount += 1;\n      if (prog != null)\n        this.progInspComp.actualizarProgMetadata(prog.id, null, true);\n    } else if (inspeccion != null && prog != null) {\n      prog.numeroRealizadas += 1;\n    }\n  }\n\n  onEvent(event) {\n    switch (event.type) {\n      case 'onSync':\n        // si event.inspeccion.programacion  == null indica que es una programacion no programada\n        if (event.inspeccion.programacion != null)\n          this.progInspComp.actualizarProgMetadata(event.inspeccion.programacion.id, true, false);\n        break;\n      case 'onLocalRemove':\n        // si event.inspeccion.programacion  == null indica que es una programacion no programada\n        if (event.inspeccion.programacion != null)\n          this.progInspComp.actualizarProgMetadata(event.inspeccion.programacion.id, null, false);\n        break;\n    }\n    this.inspCount = event.count;\n  }\n\n  navegar(url) {\n    this.router.navigate([url])\n  }\n\n  segmentChanged(event) {\n    for (var seg in this.segments) {\n      this.segments[seg] = false;\n      if (event.detail.value == seg)\n        this.segments[seg] = true;\n\n    }\n  }\n\n  /* *********************** inspecciones no programadas ******************************** */\n\n\n}\n"],"sourceRoot":""}